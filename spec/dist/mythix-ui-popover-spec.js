/* eslint-disable max-classes-per-file */
/* eslint-disable no-array-constructor */
/* eslint-disable no-magic-numbers */

import * as _TestHelpers from '../support/test-helpers.js';

import { MythixUIPopover } from '../../dist/mythix-ui-popover.js';

describe('MythixUIPopover', () => {
  let component;

  beforeEach(() => {
    component = new MythixUIPopover();
  });

  describe('something', () => {
    it('works', () => {
      expect(component.parseAnchorAlignment()).toEqual([
        { // default is bottom center (y-axis major)
          anchorX:            0.5,
          anchorXOffset:      0.0,
          anchorXOffsetUnit:  '',
          anchorY:            1.0,
          anchorYOffset:      0.0,
          anchorYOffsetUnit:  '',
          popoverX:           0.5,
          popoverXOffset:     0.0,
          popoverXOffsetUnit: '',
          popoverY:           0.0,
          popoverYOffset:     0.0,
          popoverYOffsetUnit: '',
        },
        { // now should flip on y-axis
          anchorX:            0.5,
          anchorXOffset:      0.0,
          anchorXOffsetUnit:  '',
          anchorY:            0.0,
          anchorYOffset:      -0.0,
          anchorYOffsetUnit:  '',
          popoverX:           0.5,
          popoverXOffset:     0.0,
          popoverXOffsetUnit: '',
          popoverY:           1.0,
          popoverYOffset:     -0.0,
          popoverYOffsetUnit: '',
        },
        { // now should flip minor (nothing happens on this step, because x-axis is 0.5)
          anchorX:            0.5,
          anchorXOffset:      -0.0,
          anchorXOffsetUnit:  '',
          anchorY:            1.0,
          anchorYOffset:      0.0,
          anchorYOffsetUnit:  '',
          popoverX:           0.5,
          popoverXOffset:     -0.0,
          popoverXOffsetUnit: '',
          popoverY:           0.0,
          popoverYOffset:     0.0,
          popoverYOffsetUnit: '',
        },
        { // now swap axis (x becomes y, y becomes x)
          anchorX:            1.0,
          anchorXOffset:      0.0,
          anchorXOffsetUnit:  '',
          anchorY:            0.5,
          anchorYOffset:      0.0,
          anchorYOffsetUnit:  '',
          popoverX:           0.0,
          popoverXOffset:     0.0,
          popoverXOffsetUnit: '',
          popoverY:           0.5,
          popoverYOffset:     0.0,
          popoverYOffsetUnit: '',
        },
        { // now swap axis (x becomes y, y becomes x), and then flip major (x-axis)
          anchorX:            0.0,
          anchorXOffset:      -0.0,
          anchorXOffsetUnit:  '',
          anchorY:            0.5,
          anchorYOffset:      0.0,
          anchorYOffsetUnit:  '',
          popoverX:           1.0,
          popoverXOffset:     -0.0,
          popoverXOffsetUnit: '',
          popoverY:           0.5,
          popoverYOffset:     0.0,
          popoverYOffsetUnit: '',
        },
        { // center x and center y
          anchorX:            0.5,
          anchorXOffset:      0,
          anchorXOffsetUnit:  '',
          anchorY:            0.5,
          anchorYOffset:      0,
          anchorYOffsetUnit:  '',
          popoverX:           0.5,
          popoverXOffset:     0,
          popoverXOffsetUnit: '',
          popoverY:           0.5,
          popoverYOffset:     0,
          popoverYOffsetUnit: '',
        },
      ]);

      expect(component.parseAnchorAlignment('0.5 1.0 0.5 0.0')).toEqual([
        {
          anchorX:            0.5,
          anchorXOffset:      0.0,
          anchorXOffsetUnit:  '',
          anchorY:            1.0,
          anchorYOffset:      0,
          anchorYOffsetUnit:  '',
          popoverX:           0.5,
          popoverXOffset:     0,
          popoverXOffsetUnit: '',
          popoverY:           0.0,
          popoverYOffset:     0,
          popoverYOffsetUnit: '',
        },
        {
          anchorX:            0.5,
          anchorXOffset:      0.0,
          anchorXOffsetUnit:  '',
          anchorY:            0.0,
          anchorYOffset:      -0,
          anchorYOffsetUnit:  '',
          popoverX:           0.5,
          popoverXOffset:     0,
          popoverXOffsetUnit: '',
          popoverY:           1.0,
          popoverYOffset:     -0,
          popoverYOffsetUnit: '',
        },
        {
          anchorX:            0.5,
          anchorXOffset:      -0.0,
          anchorXOffsetUnit:  '',
          anchorY:            1,
          anchorYOffset:      0,
          anchorYOffsetUnit:  '',
          popoverX:           0.5,
          popoverXOffset:     -0,
          popoverXOffsetUnit: '',
          popoverY:           0,
          popoverYOffset:     0,
          popoverYOffsetUnit: '',
        },
        {
          anchorX:            1.0,
          anchorXOffset:      0,
          anchorXOffsetUnit:  '',
          anchorY:            0.5,
          anchorYOffset:      0,
          anchorYOffsetUnit:  '',
          popoverX:           0,
          popoverXOffset:     0,
          popoverXOffsetUnit: '',
          popoverY:           0.5,
          popoverYOffset:     0,
          popoverYOffsetUnit: '',
        },
        {
          anchorX:            0.0,
          anchorXOffset:      -0,
          anchorXOffsetUnit:  '',
          anchorY:            0.5,
          anchorYOffset:      0,
          anchorYOffsetUnit:  '',
          popoverX:           1,
          popoverXOffset:     -0,
          popoverXOffsetUnit: '',
          popoverY:           0.5,
          popoverYOffset:     0,
          popoverYOffsetUnit: '',
        },
        { // center x and center y
          anchorX:            0.5,
          anchorXOffset:      0,
          anchorXOffsetUnit:  '',
          anchorY:            0.5,
          anchorYOffset:      0,
          anchorYOffsetUnit:  '',
          popoverX:           0.5,
          popoverXOffset:     0,
          popoverXOffsetUnit: '',
          popoverY:           0.5,
          popoverYOffset:     0,
          popoverYOffsetUnit: '',
        },
      ]);

      expect(component.parseAnchorAlignment('5.5-.2em 0.3 + 2.500e+1% + 2 -4px 23.67 + 42pt')).toEqual([
        {
          anchorX:            1.0,
          anchorXOffset:      -0.2,
          anchorXOffsetUnit:  'em',
          anchorY:            0.3,
          anchorYOffset:      25,
          anchorYOffsetUnit:  '%',
          popoverX:           1,
          popoverXOffset:     -4,
          popoverXOffsetUnit: 'px',
          popoverY:           1,
          popoverYOffset:     42,
          popoverYOffsetUnit: 'pt',
        },
        {
          anchorX:            1.0,
          anchorXOffset:      -0.2,
          anchorXOffsetUnit:  'em',
          anchorY:            0.7,
          anchorYOffset:      -25,
          anchorYOffsetUnit:  '%',
          popoverX:           1,
          popoverXOffset:     -4,
          popoverXOffsetUnit: 'px',
          popoverY:           0,
          popoverYOffset:     -42,
          popoverYOffsetUnit: 'pt',
        },
        {
          anchorX:            0,
          anchorXOffset:      0.2,
          anchorXOffsetUnit:  'em',
          anchorY:            0.3,
          anchorYOffset:      25,
          anchorYOffsetUnit:  '%',
          popoverX:           0,
          popoverXOffset:     4,
          popoverXOffsetUnit: 'px',
          popoverY:           1,
          popoverYOffset:     42,
          popoverYOffsetUnit: 'pt',
        },
        {
          anchorX:            0.3,
          anchorXOffset:      25,
          anchorXOffsetUnit:  'em',
          anchorY:            1,
          anchorYOffset:      -0.2,
          anchorYOffsetUnit:  '%',
          popoverX:           1,
          popoverXOffset:     42,
          popoverXOffsetUnit: 'px',
          popoverY:           1,
          popoverYOffset:     -4,
          popoverYOffsetUnit: 'pt',
        },
        {
          anchorX:            0.7,
          anchorXOffset:      -25,
          anchorXOffsetUnit:  'em',
          anchorY:            1,
          anchorYOffset:      -0.2,
          anchorYOffsetUnit:  '%',
          popoverX:           0,
          popoverXOffset:     -42,
          popoverXOffsetUnit: 'px',
          popoverY:           1,
          popoverYOffset:     -4,
          popoverYOffsetUnit: 'pt',
        },
        { // center x and center y
          anchorX:            0.5,
          anchorXOffset:      0,
          anchorXOffsetUnit:  'em',
          anchorY:            0.5,
          anchorYOffset:      0,
          anchorYOffsetUnit:  '%',
          popoverX:           0.5,
          popoverXOffset:     0,
          popoverXOffsetUnit: 'px',
          popoverY:           0.5,
          popoverYOffset:     0,
          popoverYOffsetUnit: 'pt',
        },
      ]);

      expect(component.parseAnchorAlignment(`
        5.5-.2em 0.3 + 2.500e+1% + 2 -4px 23.67 + 42pt,
        6.5-.3em 0.4 + 3.500e+2% + 3 -5px 24.67 + 43pt,
        7.5-.4em 0.5 + 4.500e+2% + 4 -6px 25.67 + 44pt,
        8.5-.5em 0.6 + 5.500e+3% + 5 -7px 26.67 + 45pt,
      `, { clamp: false })).toEqual([
        {
          anchorX:            5.5,
          anchorXOffset:      -0.2,
          anchorXOffsetUnit:  'em',
          anchorY:            0.3,
          anchorYOffset:      25,
          anchorYOffsetUnit:  '%',
          popoverX:           2,
          popoverXOffset:     -4,
          popoverXOffsetUnit: 'px',
          popoverY:           23.67,
          popoverYOffset:     42,
          popoverYOffsetUnit: 'pt',
        },
        {
          anchorX:            6.5,
          anchorXOffset:      -0.3,
          anchorXOffsetUnit:  'em',
          anchorY:            0.4,
          anchorYOffset:      350,
          anchorYOffsetUnit:  '%',
          popoverX:           3,
          popoverXOffset:     -5,
          popoverXOffsetUnit: 'px',
          popoverY:           24.67,
          popoverYOffset:     43,
          popoverYOffsetUnit: 'pt',
        },
        {
          anchorX:            7.5,
          anchorXOffset:      -0.4,
          anchorXOffsetUnit:  'em',
          anchorY:            0.5,
          anchorYOffset:      450,
          anchorYOffsetUnit:  '%',
          popoverX:           4,
          popoverXOffset:     -6,
          popoverXOffsetUnit: 'px',
          popoverY:           25.67,
          popoverYOffset:     44,
          popoverYOffsetUnit: 'pt',
        },
        {
          anchorX:            8.5,
          anchorXOffset:      -0.5,
          anchorXOffsetUnit:  'em',
          anchorY:            0.6,
          anchorYOffset:      5500,
          anchorYOffsetUnit:  '%',
          popoverX:           5,
          popoverXOffset:     -7,
          popoverXOffsetUnit: 'px',
          popoverY:           26.67,
          popoverYOffset:     45,
          popoverYOffsetUnit: 'pt',
        },
        {
          anchorX:            0.7,
          anchorXOffset:      -25,
          anchorXOffsetUnit:  'em',
          anchorY:            5.5,
          anchorYOffset:      -0.2,
          anchorYOffsetUnit:  '%',
          popoverX:           -22.67,
          popoverXOffset:     -42,
          popoverXOffsetUnit: 'px',
          popoverY:           2,
          popoverYOffset:     -4,
          popoverYOffsetUnit: 'pt',
        },
        { // center x and center y
          anchorX:            0.5,
          anchorXOffset:      0,
          anchorXOffsetUnit:  'em',
          anchorY:            0.5,
          anchorYOffset:      0,
          anchorYOffsetUnit:  '%',
          popoverX:           0.5,
          popoverXOffset:     0,
          popoverXOffsetUnit: 'px',
          popoverY:           0.5,
          popoverYOffset:     0,
          popoverYOffsetUnit: 'pt',
        },
      ]);
    });
  });
});
